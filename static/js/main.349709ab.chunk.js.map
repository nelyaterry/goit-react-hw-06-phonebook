{"version":3,"sources":["Components/App/App.styled.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-action.js","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.styled.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["Title","styled","h1","SubTitle","h2","Phonebook","div","ContactBox","Button","button","ButtonText","children","onClick","Form","form","Label","label","InputName","span","Input","input","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handelChange","e","currentTarget","value","reset","onSubmit","preventDefault","type","pattern","title","required","onChange","propTypes","PropTypes","func","ContacstList","ul","Contact","li","ContactName","ContactPhone","MessageNotFound","p","getFilteredContacts","contacts","filter","filterNormalized","toLowerCase","contact","includes","connect","items","handleDeleteContact","length","map","h3","Filter","useSelector","state","target","trim","App","createReducer","_","some","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"0QAEaA,EAAQC,IAAOC,GAAV,iGAKLC,EAAWF,IAAOG,GAAV,qEAIRC,EAAYJ,IAAOK,IAAV,8CAITC,EAAaN,IAAOK,IAAV,yJ,yBCbVE,EAASP,IAAOQ,OAAV,mP,OCUJC,EATI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC9B,OAAO,cAACJ,EAAD,CAAQI,QAASA,EAAjB,SAA2BD,KCFvBE,EAAOZ,IAAOa,KAAV,yMAYJC,EAAQd,IAAOe,MAAV,iHAOLC,EAAYhB,IAAOiB,KAAV,sHAOTC,EAAQlB,IAAOmB,MAAV,sN,eCLLC,EAAaC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACxEC,QAAS,CACPF,OACAC,SACAE,GAAIC,mBAIKC,EAAgBN,YAAa,mBAE7BO,EAAeP,YAAa,yB,OC4C1BQ,EAnEK,WAGlB,IAAMC,EAAWC,cAKjB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACD,SAAThB,GACFW,EAAQK,GAEG,WAAThB,GACFY,EAAUI,IAURC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,eAACtB,EAAD,CAAM4B,SAZa,SAACJ,GACpBA,EAAEK,iBAjBa,SAACnB,EAAMC,GAAWO,EAASV,EAAWE,EAAMC,IAkB3DiB,CAASlB,EAAMC,GACfgB,KASA,UACE,eAACzB,EAAD,WACE,cAACE,EAAD,mBACA,cAACE,EAAD,CACEwB,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRP,MAAOhB,EACPwB,SAAUX,OAId,eAACrB,EAAD,WACE,cAACE,EAAD,qBACA,cAACE,EAAD,CACEwB,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRP,MAAOf,EACPuB,SAAUX,OAId,cAAC,EAAD,CAAYO,KAAK,SAAjB,6BASN9B,EAAKmC,UAAY,CACfP,SAAUQ,IAAUC,MC9Ef,I,MAAMC,EAAelD,IAAOmD,GAAV,oGAOZC,EAAUpD,IAAOqD,GAAV,gPAUPC,EAActD,IAAOiB,KAAV,oIAQXsC,EAAevD,IAAOiB,KAAV,qHAOZuC,EAAkBxD,IAAOyD,EAAV,8FCAtBC,EAAsB,SAACC,EAAUC,GACrC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOH,EAASC,QAAO,SAACG,GAAD,OACrBA,EAAQzC,KAAKwC,cAAcE,SAASH,OAYzBI,gBARS,SAAC,GAAD,QAAGN,SAAYO,EAAf,EAAeA,MAAON,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DD,SAAUD,EAAoBQ,EAAON,OAGZ,SAAC9B,GAAD,MAAe,CACxCqC,oBAAqB,SAAC1C,GAAD,OAAQK,EAASH,EAAcF,QAGvCwC,EArCE,SAAC,GAAuC,IAArCN,EAAoC,EAApCA,SAAUQ,EAA0B,EAA1BA,oBAC5B,OAEER,EAASS,OAAS,EAChB,cAAClB,EAAD,UACGS,EAASU,KAAI,gBAAG/C,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQE,EAAjB,EAAiBA,GAAjB,OACZ,eAAC2B,EAAD,CAAkB3B,GAAIA,EAAtB,UACE,cAAC6B,EAAD,UAAchC,IACd,cAACiC,EAAD,UAAehC,IACf,cAAC,EAAD,CAAYmB,KAAK,SAAS/B,QAAS,kBAAMwD,EAAoB1C,IAA7D,sBAHYA,QAUlB,cAAC+B,EAAD,mCC3BOzD,GAAQC,IAAOsE,GAAV,4EAKLpD,GAAQlB,IAAOmB,MAAV,2QCcHoD,GAhBA,WAEb,IAAMjC,EAAQkC,aAAY,SAAAC,GAAK,OAAIA,EAAMd,SAASC,UAC7C9B,EAAYC,cAIjB,OACE,qCACE,cAAC,GAAD,mCACA,cAAC,GAAD,CAAOW,KAAK,OAAOpB,KAAK,SAASgB,MAAOA,EAAOQ,SALnC,SAAAV,GAAC,OAAIN,EAASF,EAAaQ,EAAEsC,OAAOpC,MAAMqC,gBCa7CC,GAhBH,WACV,OACE,qCACE,cAAC7E,EAAD,wBACA,eAACK,EAAD,WACE,cAAC,EAAD,IACA,eAACE,EAAD,WACE,cAACJ,EAAD,uBACA,cAAC,GAAD,IACA,cAAC,GAAD,c,0BCZJ0D,GAASiB,YAAc,GAAD,gBACzBjD,GAAe,SAACkD,EAAD,YAAMtD,YAGlB0C,GAAQW,YAAc,IAAD,oBACxBzD,GAAa,SAACqD,EAAD,GAAyB,IAAfjD,EAAc,EAAdA,QACtB,OACGiD,EAAMM,MACL,SAAChB,GAAD,OACEA,EAAQzC,KAAKwC,cAAca,SAAWnD,EAAQF,KAAKwC,kBAKvDkB,MAAM,IAAD,OAAKxD,EAAQF,KAAb,oCACEmD,GAHD,GAAN,oBAAWA,GAAX,CAAkBjD,OARG,eAcxBG,GAAgB,SAAC8C,EAAD,OAAUjD,EAAV,EAAUA,QAAV,OACfiD,EAAMb,QAAO,SAACG,GAAD,OAAaA,EAAQtC,KAAOD,QAflB,IAkBZyD,gBAAgB,CAC7Bf,MAAOA,GACPN,OAAQA,K,iBCdJsB,GAAwB,CAC5BC,IAAK,WACLC,Q,QAAAA,EACAC,UAAW,CAAC,WAGRC,GAAU,aACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAK1DC,GAAQC,YAAe,CAC3BC,QAAS,CACPvC,SAAUwC,aAAejB,GAAuBkB,KAElDd,gBAIIe,GAAYC,aAAaN,IC5B/BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaU,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.349709ab.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 24px 24px;\r\n  color: rgb(93 203 152);\r\n`;\r\nexport const SubTitle = styled.h2`\r\n  color: rgb(75, 75, 75);\r\n  margin: 0;\r\n`;\r\nexport const Phonebook = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContactBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: rgba(165, 230, 250, 0.3);\r\n  width: 65%;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  height: 50px;\r\n  padding: 12px 24px;\r\n  font-size: 18px;\r\n  color: white;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152);\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button.styled\";\r\n\r\nconst ButtonText = ({ children, onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\nButtonText.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ButtonText;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n\r\n  & > button {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const InputName = styled.span`\r\n  margin-bottom: 16px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 8px 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgba(228, 228, 228, 0.5);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import { v4 as uuidv4 } from \"uuid\";\n// import { ADD, DELETE, FILTER } from \"./contacts-types\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n// export const addContact = (name, number) => ({\n//   type: ADD,\n//   payload: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// });\n\n// export const deleteContact = (id) => ({\n//   type: DELETE,\n//   payload: id,\n// });\n\n// export const changeFilter = (value) => ({\n//   type: FILTER,\n//   payload: value,\n// });\n\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import React, { useState } from \"react\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\r\nimport { addContact } from \"../../redux/contacts/contacts-action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ContactForm = () => {\r\n\r\n  // const items = useSelector(state => state.contacts.items)\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handelSubmit}>\r\n      <Label>\r\n        <InputName>Name</InputName>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <InputName>Number</InputName>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <ButtonText type=\"submit\">Add Contact</ButtonText>\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ContactForm;\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContacstList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152 / 20%);\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  width: 40%;\r\n  margin-right: 12px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const ContactPhone = styled.span`\r\n  margin-right: 12px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const MessageNotFound = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-action\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport {\r\n  ContacstList,\r\n  Contact,\r\n  ContactName,\r\n  ContactPhone,\r\n  MessageNotFound,\r\n} from \"./Contacts.styled\";\r\n\r\nconst Contacts = ({ contacts, handleDeleteContact }) => {\r\n  return (\r\n    // <p>helloWorld {contacts[0]}</p>\r\n    contacts.length > 0 ? (\r\n      <ContacstList>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <Contact key={id} id={id}>\r\n            <ContactName>{name}</ContactName>\r\n            <ContactPhone>{number}</ContactPhone>\r\n            <ButtonText type=\"button\" onClick={() => handleDeleteContact(id)}>\r\n              Delete\r\n            </ButtonText>\r\n          </Contact>\r\n        ))}\r\n      </ContacstList>\r\n    ) : (\r\n      <MessageNotFound>Contact not found</MessageNotFound>\r\n    )\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (contacts, filter) => {\r\n  const filterNormalized = filter.toLowerCase();\r\n\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filterNormalized)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  handleDeleteContact: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n  color: rgb(93 203 152);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  /* height: 40px; */\r\n  padding: 8px 24px;\r\n  margin-bottom: 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  /* background-color: rgba(228, 228, 228, 0.5); */\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\r\n\r\nimport { Title, Input } from \"./Filter.styled\";\r\nconst Filter = () => {\r\n\r\n  const value = useSelector(state => state.contacts.filter);\r\n const dispatch  = useDispatch();\r\n\r\n const onChange = e => dispatch(changeFilter(e.target.value.trim()));\r\n\r\n  return (\r\n    <>\r\n      <Title>Find contact by name</Title>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n","// import React, { useState, useEffect } from \"react\";\n\nimport { Phonebook, Title, SubTitle, ContactBox } from \"./App.styled\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nconst App = () => {\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Phonebook>\n        <ContactForm />\n        <ContactBox>\n          <SubTitle>Contacts</SubTitle>\n          <Filter />\n          <Contacts />\n        </ContactBox>\n      </Phonebook>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, changeFilter } from \"./contacts-action\";\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => {\n    if (\n      !state.some(\n        (contact) =>\n          contact.name.toLowerCase().trim() === payload.name.toLowerCase()\n      )\n    ) {\n      return [...state, payload];\n    } else {\n      alert(` ${payload.name} is alredy in the contacts list`);\n      return state;\n    }\n  },\n  [deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nexport default combineReducers({\n  items: items,\n  filter: filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reduser\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst contactsPersistConfig = {\n  key: \"Contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  // devTools: process.env.NODE_ENV === \"development\"\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}