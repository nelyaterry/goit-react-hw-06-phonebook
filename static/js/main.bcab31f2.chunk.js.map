{"version":3,"sources":["Components/App/App.styled.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-types.js","Components/ContactForm/ContactForm.jsx","redux/contacts/contacts-action.js","Components/Contacts/Contacts.styled.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["Title","styled","h1","SubTitle","h2","Phonebook","div","ContactBox","Button","button","ButtonText","children","onClick","Form","form","Label","label","InputName","span","Input","input","ADD","DELETE","FILTER","connect","state","items","contacts","dispatch","onSubmit","name","number","type","payload","id","uuidv4","addContact","useState","setName","setNumber","handelChange","e","currentTarget","value","reset","preventDefault","pattern","title","required","onChange","propTypes","PropTypes","func","ContacstList","ul","Contact","li","ContactName","ContactPhone","MessageNotFound","p","getFilteredContacts","filter","filterNormalized","toLowerCase","contact","includes","handleDeleteContact","deleteContact","length","map","h3","changeFilter","target","trim","App","localStorageContact","JSON","parse","window","localStorage","getItem","combineReducers","newState","console","log","some","alert","setItem","stringify","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcab31f2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  font-size: 64px;\n  margin: 24px 24px;\n  color: rgb(93 203 152);\n`;\nexport const SubTitle = styled.h2`\n  color: rgb(75, 75, 75);\n  margin: 0;\n`;\nexport const Phonebook = styled.div`\n  display: flex;\n`;\n\nexport const ContactBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  background-color: rgba(165, 230, 250, 0.3);\n  width: 65%;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  height: 50px;\n  padding: 12px 24px;\n  font-size: 18px;\n  color: white;\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\n  background-color: rgb(93 203 152);\n  outline: none;\n  cursor: pointer;\n  border: none;\n`;\n","import PropTypes from \"prop-types\";\nimport { Button } from \"./Button.styled\";\n\nconst ButtonText = ({ children, onClick }) => {\n  return <Button onClick={onClick}>{children}</Button>;\n};\n\nButtonText.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default ButtonText;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 35%;\n  padding: 24px 32px;\n  background-color: rgba(67, 67, 67, 0.3);\n\n  & > button {\n    margin-top: 40px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 24px;\n`;\n\nexport const InputName = styled.span`\n  margin-bottom: 16px;\n  font-weight: 600;\n  font-size: 24px;\n  color: rgb(75 75 75);\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  padding: 8px 24px;\n  font-size: 18px;\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\n  background-color: rgba(228, 228, 228, 0.5);\n  outline: none;\n  border: none;\n`;\n","const ADD = \"contacts/add\";\nconst DELETE = \"contacts/delete\";\nconst FILTER = \"contacts/changeFilter\";\n\nexport { ADD, DELETE, FILTER };\n","import React, { useState } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport PropTypes from \"prop-types\";\n\nimport ButtonText from \"../Button/Button\";\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-action\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handelSubmit}>\n      <Label>\n        <InputName>Name</InputName>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </Label>\n\n      <Label>\n        <InputName>Number</InputName>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </Label>\n\n      <ButtonText type=\"submit\">Add Contact</ButtonText>\n    </Form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ADD, DELETE, FILTER } from \"./contacts-types\";\n\nexport const addContact = (name, number) => ({\n  type: ADD,\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n});\n\nexport const deleteContact = (id) => ({\n  type: DELETE,\n  payload: id,\n});\n\nexport const changeFilter = (value) => ({\n  type: FILTER,\n  payload: value,\n});\n","import styled from \"@emotion/styled\";\n\nexport const ContacstList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  width: 600px;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  margin-bottom: 12px;\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\n  background-color: rgb(93 203 152 / 20%);\n`;\n\nexport const ContactName = styled.span`\n  width: 40%;\n  margin-right: 12px;\n  font-weight: 600;\n  font-size: 24px;\n  color: rgb(75 75 75);\n`;\n\nexport const ContactPhone = styled.span`\n  margin-right: 12px;\n  font-weight: 500;\n  font-size: 20px;\n  color: rgb(75 75 75);\n`;\n\nexport const MessageNotFound = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n  color: rgb(75 75 75);\n`;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/contacts-action\";\n\nimport ButtonText from \"../Button/Button\";\nimport {\n  ContacstList,\n  Contact,\n  ContactName,\n  ContactPhone,\n  MessageNotFound,\n} from \"./Contacts.styled\";\n\nconst Contacts = ({ contacts, handleDeleteContact }) => {\n  return (\n    // <p>helloWorld {contacts[0]}</p>\n    contacts.length > 0 ? (\n      <ContacstList>\n        {contacts.map(({ name, number, id }) => (\n          <Contact key={id} id={id}>\n            <ContactName>{name}</ContactName>\n            <ContactPhone>{number}</ContactPhone>\n            <ButtonText type=\"button\" onClick={() => handleDeleteContact(id)}>\n              Delete\n            </ButtonText>\n          </Contact>\n        ))}\n      </ContacstList>\n    ) : (\n      <MessageNotFound>Contact not found</MessageNotFound>\n    )\n  );\n};\n\nconst getFilteredContacts = (contacts, filter) => {\n  const filterNormalized = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filterNormalized)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  handleDeleteContact: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h3`\n  color: rgb(93 203 152);\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  /* height: 40px; */\n  padding: 8px 24px;\n  margin-bottom: 24px;\n  font-size: 18px;\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\n  /* background-color: rgba(228, 228, 228, 0.5); */\n  outline: none;\n  border: none;\n`;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\n\nimport { Title, Input } from \"./Filter.styled\";\nconst Filter = ({ value, changeFilter }) => {\n  return (\n    <>\n      <Title>Find contact by name</Title>\n      <Input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (e) => dispatch(changeFilter(e.target.value.trim())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","// import React, { useState, useEffect } from \"react\";\n\nimport { Phonebook, Title, SubTitle, ContactBox } from \"./App.styled\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nconst App = () => {\n  // const [contacts, setContacts] = useState(\n  //   () =>\n  //     JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [\n  //       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //     ]\n  // );\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const formSubmitHandler = (data) => {\n  //   !contacts.some(\n  //     (contact) => contact.name.toLowerCase().trim() === data.name.toLowerCase()\n  //   )\n  //     ? setContacts((prevState) => [...prevState, data])\n  //     : alert(` ${data.name} is alredy in the contacts list`);\n  // };\n\n  // const handleDeleteContact = (id) => {\n  //   setContacts((prevState) =>\n  //     prevState.filter((contact) => contact.id !== id)\n  //   );\n  // };\n\n  // const changeFilter = (e) => {\n  //   setFilter(e.target.value.trim());\n  // };\n\n  // const getFilteredContacts = () => {\n  //   const filterNormalized = filter.toLowerCase();\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filterNormalized)\n  //   );\n  // };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Phonebook>\n        <ContactForm />\n        <ContactBox>\n          <SubTitle>Contacts</SubTitle>\n          <Filter />\n          <Contacts />\n        </ContactBox>\n      </Phonebook>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { ADD, DELETE, FILTER } from \"./contacts-types\";\n\nconst localStorageContact = JSON.parse(window.localStorage.getItem(\"contacts\"));\n\nconst items = (\n  state = localStorageContact ? localStorageContact : [],\n  { type, payload }\n) => {\n  let newState = [];\n  console.log(state);\n\n  switch (type) {\n    case ADD:\n      if (\n        !state.some(\n          (contact) =>\n            contact.name.toLowerCase().trim() === payload.name.toLowerCase()\n        )\n      ) {\n        newState = [...state, payload];\n        window.localStorage.setItem(\"contacts\", JSON.stringify(newState));\n      } else {\n        alert(` ${payload.name} is alredy in the contacts list`);\n        newState = state;\n      }\n\n      //   newState = [...state, payload];\n      //   window.localStorage.setItem(\"contacts\", JSON.stringify(newState));\n      return newState;\n\n    case DELETE:\n      newState = state.filter((contact) => contact.id !== payload);\n      window.localStorage.setItem(\"contacts\", JSON.stringify(newState));\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: items,\n  filter: filter,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport contactsReducer from \"./contacts/contacts-reduser\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}